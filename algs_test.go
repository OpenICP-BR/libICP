package libICP

import (
	"encoding/base64"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_PairAlgPubKey_RSAPubKey(t *testing.T) {
	p := pair_alg_pub_key{}
	key, err := p.RSAPubKey()
	assert.NotNil(t, err)
	assert.Nil(t, key.N)
	assert.Equal(t, 0, key.E)
}

func Test_parse_rsa_private_key(t *testing.T) {
	dat, err := base64.StdEncoding.DecodeString("MIIEowIBAAKCAQEAo8jk9tCjMH+CisY0nRAAdBH+B4j0fE8XfhTJSeQMRJqlDaWkeizm5ReOgEMN/NK4TESQC7iX4hiH1ZKTDEdnLccZ4dHXD9MGTT+IeWQqCzG5wHapGbCvHruqJtjSFClM3gRbi8UAqKp6K+eeaDmcV9zDeJnynQuUbovU8+d1gpv/68IVjmZpfOA95BPi0oDvfxwZ2nx6ztQZln1CYbZ/gw45aEcv/YmcTB6FEr1XF6RmPo6U0W/vv1tItccGDhRq65O9UM4gTGJA9egVZ8yyTFWFizN5pGhnutkyKDFPU58me15eDeOUTl05SPXz1SQVlNLgvj7FwNQmiShBiXHMrQIDAQABAoIBAGX7Rg4k1SfyjW8pgUM23oFnXpyEe28XtFIOUVOQCs+A1zsLI8HrSY3mQBW/Kut8rcLXgjW6J+BhU9r5HFSt9SH88jG4/kddJ3RcFfc4FjHIMZgUirBzYmcphQYRRaXGHZW0cugxr3pWRCIoY2sUTDQtQw1KFlYRCshWiy+ftHyw9MmS4RAVoQpFThYAe0yUNpuSCVigE54qOI2ONbJfYXVsS2qOFuvttB0TMqKv9WHsplnxMUwYl0N/Pm8EfZgGeCWeldFJGLzXFcdl5wH5sViwgyT5i81Fk5X+wWCGBRGP3AMf4fYD1o8vX75IdjKHNfRvLNoYZJ1hMAT+9qIRLGECgYEA1clV/YquEhYM7Ic9GN7Gd+CjkeF+f6HudQDuOvLfEvE8K826jZvWDtQyh18Qk6K70TWuI+xSxUO1PU/WJi+oEt8b76QvgG6zmEO65I0Y7yj9O65nL6xFGXOQyAHJZJ0/qOde13g0Ee676m9s9wTjNhQA/5CsXCA/bjZFDtlP6ekCgYEAxCAHI0G6h7H3a1BdJsEsgSsmBgIN+Hnt9peJTMAx5POmZbcL4BfiXV16NI623pvcLYgnrjwbu7zOvZ/zqymY7ZtXQQzBFy/iWSIfJfoYqYI5pNMANy52pjQL36mH3rhf63hO0KsXgBidgbq8zzMNGGsDN+Z3oHox7gRWgyagTiUCgYEAsh2eoTELulHYzrAWPUROQs5MOVyQEjKOA7mUwlRbeuK16SDsjtMJUy2EM7kGjJqGtNVukstwYp34wG5l00bdV2u/ULeQRAb3ZqL3cTgFUCzsXu79VYDHyV65f4nNiyBgS48JO6gQaehnc/kF5gCSdRnRgxu8Hr1XW7Gnc6mmpRECgYAKCYGUAlcjfq4k5dX+l8BJVAX8JLrGTqcpCZRTQzrKdtW7OuT2sQI6uP/6FJuzRNK92cv+FMFumDkUZ003I0faUSrj/10abK7u1No3PVdpxWphzxKhwFT+KIe7CJgVg+YUzPFrqHXpblkRPJdRG1G+QCvH/pl8swQ/JCWxTJbDqQKBgADAXkJVpgazVmhurmjfsLATjMuihKJE/0O1+868QW2FJZ6vSFdUCMH7tLkVXgGif1FbjSoK6lshlgzJ8W/DYULDJ5oI2zBESbdDqWY66hgHhXRzwhx0C+khiJM5ZdfrwO2HzaoFcv89QdtJHLCWBrj6vKZECIynCRBEQA3rAFKf")
	require.Nil(t, err)

	priv, cerr := unmarshal_rsa_private_key(dat)
	require.Nil(t, cerr)
	assert.Equal(t, "a3c8e4f6d0a3307f828ac6349d10007411fe0788f47c4f177e14c949e40c449aa50da5a47a2ce6e5178e80430dfcd2b84c44900bb897e21887d592930c47672dc719e1d1d70fd3064d3f8879642a0b31b9c076a919b0af1ebbaa26d8d214294cde045b8bc500a8aa7a2be79e68399c57dcc37899f29d0b946e8bd4f3e775829bffebc2158e66697ce03de413e2d280ef7f1c19da7c7aced419967d4261b67f830e3968472ffd899c4c1e8512bd5717a4663e8e94d16fefbf5b48b5c7060e146aeb93bd50ce204c6240f5e81567ccb24c55858b3379a46867bad93228314f539f267b5e5e0de3944e5d3948f5f3d5241594d2e0be3ec5c0d4268928418971ccad", priv.N.Text(16))
	assert.Equal(t, 65537, priv.E)
	assert.Equal(t, "d5c955fd8aae12160cec873d18dec677e0a391e17e7fa1ee7500ee3af2df12f13c2bcdba8d9bd60ed432875f1093a2bbd135ae23ec52c543b53d4fd6262fa812df1befa42f806eb39843bae48d18ef28fd3bae672fac45197390c801c9649d3fa8e75ed7783411eebbea6f6cf704e3361400ff90ac5c203f6e36450ed94fe9e9", priv.Primes[0].Text(16))
	assert.Equal(t, "c420072341ba87b1f76b505d26c12c812b2606020df879edf697894cc031e4f3a665b70be017e25d5d7a348eb6de9bdc2d8827ae3c1bbbbccebd9ff3ab2998ed9b57410cc1172fe259221f25fa18a98239a4d300372e76a6340bdfa987deb85feb784ed0ab1780189d81babccf330d186b0337e677a07a31ee04568326a04e25", priv.Primes[1].Text(16))
}
